<?php

namespace AppBundle\Repository;

use AppBundle\Entity;
use Doctrine\ORM\Query\ResultSetMapping;
use AppBundle\Classes\Doctrine\RepositoryTrait;

/**
 * ServiceRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ServiceRepository extends \Doctrine\ORM\EntityRepository
{
    use RepositoryTrait;
    
    public function hasChildren($id) {
        $tables = ['tariff'=>'service_id', 'place_service'=>'service_id', 'counter'=>'service_id', 'service_parameter'=>'service_id', 'scale'=>'service_id'];
        return $this->_hasChildren($id, $tables);
    }
    
    public function findAllWithParametersCount() {
        $em= $this->getEntityManager();
        $rsm = new ResultSetMapping();
        $rsm->addEntityResult(Entity\Service::class, 's', 'service');
        $rsm->addFieldResult('s', 'id', 'id');
        $rsm->addFieldResult('s', 'name', 'name');
        $rsm->addFieldResult('s', 'calculator', 'calculator');
        $rsm->addScalarResult('parameter_cnt', 'parameterCnt');

        $sql = 'SELECT `s`.*, ( SELECT COUNT(*) FROM `service_parameter` `sp` WHERE `s`.`id` = `sp`.`service_id` ) as `parameter_cnt` FROM `service` `s`'; 
        $query= $em->createNativeQuery($sql, $rsm);
            
        return $query->getResult();
    }
    
    
}
